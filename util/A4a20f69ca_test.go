// ********RoostGPT********
// Test generated by RoostGPT for test go-calculator using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
package util_test

import (
	"regexp"
	"testing"

	"gofinance-backend/util"
)

func TestRandomEmail_Positive(t *testing.T) {
	emailLength := 10 // Test with an arbitrary length for the local part of the email
	email := util.RandomEmail(emailLength)
	if len(email) != emailLength+len("@email.com") {
		t.Errorf("Expected email length of %d, got %d", emailLength+len("@email.com"), len(email))
	}

	// Check if the email matches the expected format
	emailRegex := regexp.MustCompile(`^[a-z]+@email\.com$`)
	if !emailRegex.MatchString(email) {
		t.Errorf("Email does not match the expected format: %s", email)
	}
}

func TestRandomEmail_Negative(t *testing.T) {
	emailLength := -1 // Using an invalid length to simulate negative case
	email := util.RandomEmail(emailLength)
	if email != "" {
		t.Errorf("Expected empty email for negative length, got: %s", email)
	}
}

